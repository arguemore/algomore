---
const features = [
  {
    id: 'expertise-1',
    name: 'Integration Development',
    description:
      'Seamlessly connect your essential business tools and automate repetitive tasks through custom integrations. We create efficient workflows that save time, reduce errors, and let you focus on what truly matters â€“ growing your business and serving your community.',
  },
  {
    id: 'expertise-2',
    name: 'Platform Configuration',
    description:
      'Optimize your existing digital tools and platforms to work harder for you. Our experts configure and customize your software ecosystem to align perfectly with your unique business processes, ensuring maximum efficiency and return on investment.',
  },
  {
    id: 'expertise-3',
    name: 'Digital Workplace Analysis',
    description:
      'Through comprehensive assessment of your digital environment, we identify opportunities for improvement and innovation. Our analysis reveals hidden inefficiencies, suggests strategic technology adoption, and creates a roadmap for your organization\'s digital transformation.',
  },
  {
    id: 'expertise-4',
    name: 'Business Process Analysis',
    description:
      'We dive deep into your operations to understand, document, and enhance your business processes. By mapping workflows, identifying bottlenecks, and implementing strategic improvements, we help you build a more efficient and sustainable organization.',
  },
];
---

<section class="py-16 sm:py-20">
  <div class="mx-auto max-w-2xl px-4 sm:px-6 lg:max-w-7xl lg:px-8">
    <div class="grid gap-12 lg:grid-cols-3 lg:gap-8">
      <h2 class="text-3xl font-medium tracking-tight sm:text-4xl">Services</h2>
      <div class="lg:col-span-2">
        <dl
          class="-mt-3"
          x-data="{ selected: null, toggle(value) { this.selected = this.selected === value ? null : value } }"
        >
          {
            features.map((feature, index) => (
              <div
                class="rounded-3xl px-4 transition"
                x-data={`{ id: ${index}, get isOpen() { return this.id === this.selected }, get isNextOpen() { return (this.id + 1) === this.selected } }`}
                x-bind:class="{ 'bg-primary-500/10 dark:bg-primary-400/10': isOpen }"
              >
                <dt
                  class="border-b text-lg transition"
                  x-cloak
                  x-bind:class="{ 'border-transparent': isOpen || isNextOpen, 'border-primary-900/10 dark:border-primary-300/10': !(isOpen || isNextOpen) }"
                >
                  <button
                    type="button"
                    class="group block w-full py-6 text-left transition focus-visible:outline-none"
                    aria-controls={feature.id}
                    x-on:click="toggle(id)"
                    aria-expanded="false"
                    x-bind:aria-expanded="isOpen.toString()"
                  >
                    <div class="group-focus-visible:outline-primary-950 dark:group-focus-visible:outline-primary-200 flex items-center justify-between rounded-3xl group-focus-visible:outline group-focus-visible:outline-2 group-focus-visible:outline-offset-2">
                      <span class="font-medium">{feature.name}</span>
                      <span class="ml-6 flex h-7 items-center">
                        <svg
                          class="text-primary-600 dark:text-primary-400 h-6 w-6 rotate-0 transform transition duration-200 ease-in-out"
                          x-bind:class="{ '-rotate-180': isOpen, 'rotate-0': !isOpen }"
                          xmlns="http://www.w3.org/2000/svg"
                          viewBox="0 0 24 24"
                          fill="currentColor"
                          aria-hidden="true"
                        >
                          <path d="M11.9997 13.1714L16.9495 8.22168L18.3637 9.63589L11.9997 15.9999L5.63574 9.63589L7.04996 8.22168L11.9997 13.1714Z" />
                        </svg>
                      </span>
                    </div>
                  </button>
                </dt>
                <dd class="pb-6 pr-6" id={feature.id} x-show="isOpen" x-cloak x-collapse>
                  <p class="text-primary-950/70 dark:text-primary-200/70 text-base">
                    {feature.description}
                  </p>
                </dd>
              </div>
            ))
          }
        </dl>
      </div>
    </div>
  </div>
</section>
